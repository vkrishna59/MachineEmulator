Imports System.Net.Http
Imports CefSharp
Imports CefSharp.WinForms
Imports System
Imports System.Text
Imports System.IO
Imports System.Net
Imports RestSharp
Imports System.Data.SqlClient
Imports System.Threading
'Imports System.Data.SqlClient





Public Class Form1
    Dim connetionString As String = "Data Source=SSIE-FT4PXG2-D;Initial Catalog=transactional_orders;Integrated Security=True"
    Dim connection As SqlConnection
    Dim command As SqlCommand
    Dim sqlquery As String
    Private _browser As ChromiumWebBrowser
    'Private increment As Integer = 0   
    Private Sub InitializeChromium()
        Dim settings As New CefSettings
        CefSharp.Cef.Initialize(settings)
        _browser = New ChromiumWebBrowser("http://localhost/")
        '_browser = New ChromiumWebBrowser("http://128.226.74.127:443/")
        Me.Controls.Add(_browser)
        _browser.BringToFront()
        _browser.Dock = DockStyle.Fill
    End Sub

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        'TODO: This line of code loads data into the 'Restore1DataSet1.TestData' table. You can move, or remove it, as needed.
        'Me.TestDataTableAdapter.Fill(Me.Restore1DataSet1.TestData)
        'TODO: This line of code loads data into the 'Transactional_ordersDataSet2.Logs_table' table. You can move, or remove it, as needed.
        'Me.Logs_tableTableAdapter.Fill(Me.Transactional_ordersDataSet2.Logs_table)

        'DataGridView3.Rows.Add(New String() {"1988", "6437", "8911675", "Processing"})

        Panel1.Hide()
        InitializeChromium()
        TextBox1.Text = ""
        TextBox2.Text = ""
        Label3.Text = ""

        Dim conn As New SqlConnection

        conn.ConnectionString = ("Data Source=.;Initial Catalog=transactional_orders; Integrated Security=True; User ID=saik")
        conn.Open()

        datagridShow()

        'Dim unused = DataGridView5.Rows.Add({1, 689, "PickUp", "0", "0", "0", "0", "0", "0"})

    End Sub

    Private Sub Form1_FormClosed(sender As Object, e As FormClosedEventArgs) Handles MyBase.FormClosed
        CefSharp.Cef.Shutdown()
        If _browser IsNot Nothing Then
            _browser.Dispose()
        End If
    End Sub

    Private Async Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        Dim client As HttpClient = New HttpClient()
        Dim responseString As String = Await client.GetStringAsync("http://localhost/webserver.dll?queryinstance=My_Models%5CIndividual%20Collation&instancenum=1&websockets=getMedia&pick")
    End Sub

    Private Async Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click
        Dim client As HttpClient = New HttpClient()
        Dim responseString As String = Await client.GetStringAsync("http://localhost/webserver.dll?queryinstance=My_Models%5CIndividual%20Collation&instancenum=1&websockets=reset&run")
    End Sub

    Private Async Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click
        Dim client As HttpClient = New HttpClient()
        Dim responseString As String = Await client.GetStringAsync("http://localhost/webserver.dll?queryinstance=My_Models%5CIndividual%20Collation&instancenum=1&websockets=reset&stop")
    End Sub

    Private Async Sub BUTTON4_CLICK(SENDER As Object, E As EventArgs) Handles Button4.Click
        Label3.Text = ""
        Dim BAY As String = TextBox1.Text
        Dim SHELF As String = TextBox2.Text
        Dim CLIENT = New RestClient("HTTP://LOCALHOST/WEBSERVER.DLL?QUERYINSTANCE=MY_MODELS%5CINDIVIDUAL%20COLLATION&INSTANCENUM=1&WEBSOCKETS=RESET&SETTABLE=FINDSLOT")
        'CLIENT.TIMEOUT = -1
        Dim REQUEST = New RestRequest(Method.Post)
        REQUEST.AddHeader("CONTENT-TYPE", "APPLICATION/X-WWW-FORM-URLENCODED")
        REQUEST.AddParameter("VALUES", "[[1," + BAY + "," + SHELF + "]]")
        ' Dim RESPONSE As IRESTRESPONSE = CLIENT.Execute(REQUEST)
        'Label3.Text = "SUCCESFULLY SENT REQUEST TO UPDATE NEW TUBE " + RESPONSE.STATUSCODE.TOSTRING

    End Sub

    Private Sub GroupBox3_Enter(sender As Object, e As EventArgs)

    End Sub

    Private Sub Button7_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub Button5_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub Button6_Click(sender As Object, e As EventArgs)
        Try
            Label3.Text = "Fetching the orders generated by script"
            BindGrid()
        Catch ex As Exception
            MsgBox("SQL connection failed ! ")
        End Try
    End Sub

    Private Sub BindGrid()
        Dim constring As String = "Data Source=SSIE-2SWBM2-D\SQLEXPRESS;Initial Catalog=transactional_orders;Integrated Security=True"
        Using con As New SqlConnection(constring)
            Using cmd As New SqlCommand("SELECT * FROM Input_source", con)
                cmd.CommandType = CommandType.Text
                Using sda As New SqlDataAdapter(cmd)
                    Using dt As New DataTable()
                        sda.Fill(dt)
                        DataGridView2.DataSource = dt
                    End Using
                End Using
            End Using
        End Using
    End Sub

    Private Sub Button8_Click(sender As Object, e As EventArgs) Handles Button8.Click
        Try
            _browser.BringToFront()
            Panel1.Show()
            Panel1.BringToFront()
            BindGrid()
        Catch ex As Exception
            MsgBox("SQL connection failed ! ")
        End Try
    End Sub

    Private Sub TabPage3_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub DataGridView2_CellContentClick(sender As Object, e As DataGridViewCellEventArgs)

    End Sub

    Private Sub TabPage1_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub Tabcontrol1_SelectedIndexChanged(sender As Object, e As EventArgs)

    End Sub

    Private Sub Button8_Click_1(sender As Object, e As EventArgs)

    End Sub

    Private Async Sub Button9_Click(sender As Object, e As EventArgs) Handles Button9.Click
        'increment += 1
        Dim resarray() As String
        Dim GroupIdlist As New List(Of String)()
        Dim baylist As New List(Of String)()
        Dim shelflist As New List(Of String)()
        Dim client As HttpClient = New HttpClient()
        Dim responseString As String = Await client.GetStringAsync("http://localhost/webserver.dll?queryinstance=My_Models%5CIndividual%20Collation&instancenum=1&websockets=reset&getTable=Input_source&csv&pagenum=0")
        resarray = responseString.Split(New String() {Environment.NewLine}, StringSplitOptions.None)
        For i As Integer = 0 To resarray.Length - 1
            Dim newstr As String = resarray(i)
            Dim final As String() = newstr.Split(New Char() {","c})
            GroupIdlist.Add(final(6))
            baylist.Add(final(7))
            shelflist.Add(final(8))
        Next
        Dim GroupIdValue = String.Join(" ", GroupIdlist.ToArray())
        Dim bayvalue = String.Join(" ", baylist.ToArray())
        Dim shelfvalue = String.Join(" ", shelflist.ToArray())
        Label10.Text = GroupIdValue
        Label6.Text = bayvalue
        Label8.Text = shelfvalue
    End Sub

    Private Sub GroupBox5_Enter(sender As Object, e As EventArgs) Handles GroupBox5.Enter

    End Sub

    Private Sub Label5_Click(sender As Object, e As EventArgs) Handles Label5.Click

    End Sub

    Private Sub Label11_Click(sender As Object, e As EventArgs) Handles Label11.Click

    End Sub

    Private Async Sub Doit()
        sqlquery = "select * from ErrorTable;"

        While (True)
            connection = New SqlConnection(connetionString)
            Try
                connection.Open()
                command = New SqlCommand(sqlquery, connection)
                command.ExecuteNonQuery()
                Dim dt As New DataTable()
                Dim da As New SqlDataAdapter(command)

                da.Fill(dt)
                DataGridView1.DataSource = dt
                command.Dispose()
                connection.Close()
            Catch ex As Exception
                MsgBox(ex.ToString)
            End Try

            Thread.Sleep(2000)
        End While
    End Sub

    Private Async Sub Button12_Click(sender As Object, e As EventArgs) Handles Button12.Click
        Try
            Dim client As HttpClient = New HttpClient()
            Dim responseString As String = Await client.GetStringAsync("http://127.0.0.1/webserver.dll?queryinstance=Scanning%20issue%20-%20operator%20added&instancenum=1&move")
            Dim result As DialogResult = MessageBox.Show("Auto Fix Script Triggered", "PseudoNEXiA", MessageBoxButtons.OKCancel)
            If result = DialogResult.OK Then
                MessageBox.Show("Sytem Reset in Progress")
                DataGridView3.Rows.Clear()
                DataGridView3.Rows.Add(New String() {"1988", "6437", "8911675", "Order Reset"})
            End If
        Catch ex As Exception
            MsgBox("Error auto Fixing")
        End Try
    End Sub

    Private Async Sub Button10_Click(sender As Object, e As EventArgs) Handles Button10.Click
        MsgBox("Robot motion is idle. RESET required")
        System.Threading.Thread.Sleep(500)
        Dim client As HttpClient = New HttpClient()
        Dim responseString As String = Await client.GetStringAsync("http://localhost/webserver.dll?queryinstance=lubna%5Cfailedtomovefromhome&instancenum=1&startit")
        MsgBox("Robot RESET completed")
    End Sub

    Private Sub Button11_Click(sender As Object, e As EventArgs) Handles Button11.Click
        MsgBox("Vials stuck in process queue. Totes are not released periodically")
        System.Threading.Thread.Sleep(3000)
        FixToteRelease()

    End Sub

    Private Sub FixToteRelease()
        MsgBox("Tote Arrival time is reset and updated")
    End Sub

    Private Sub Label14_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub Button13_Click(sender As Object, e As EventArgs)
        MsgBox("Error Notified to Human Emulator")
        System.Threading.Thread.Sleep(1000)
        MsgBox("Human Emulator Identifies the bottle tipped off")
        System.Threading.Thread.Sleep(7000)
        MsgBox("Remove the bottle from the diverter and place behind other bottles")
        System.Threading.Thread.Sleep(500)
        MsgBox("RESET completed")

    End Sub

    Private Sub Label15_Click(sender As Object, e As EventArgs) Handles Label15.Click
        MsgBox("Vial Delivery System needs Reset")
    End Sub

    Private Async Sub Button14_Click(sender As Object, e As EventArgs) Handles Button14.Click

        System.Threading.Thread.Sleep(500)
        Dim client As HttpClient = New HttpClient()
        Dim responseString As String = Await client.GetStringAsync("http://localhost/webserver.dll?queryinstance=rdxs-add%20label%20visual%20-%2041%20-%20vial%20delivery%20system%20needs%20reset&instancenum=1&startit")
        MsgBox("Vial Delivery System RESET completed")
    End Sub

    Private Sub Label16_Click(sender As Object, e As EventArgs) Handles Label16.Click
        MsgBox("Scanning Error")
    End Sub

    Private Async Sub Button15_Click(sender As Object, e As EventArgs) Handles Button15.Click
        System.Threading.Thread.Sleep(500)
        Dim client As HttpClient = New HttpClient()
        Dim responseString As String = Await client.GetStringAsync("http://localhost/webserver.dll?queryinstance=No-Product&instancenum=1&startit")
        MsgBox("Please scan the barcode")
    End Sub

    Private Sub Label14_Click_1(sender As Object, e As EventArgs) Handles Label14.Click

    End Sub

    Private Async Sub Button13_Click_1(sender As Object, e As EventArgs) Handles Button13.Click

        Dim conn As New SqlConnection

        conn.ConnectionString = ("Data Source=.;Initial Catalog=transactional_orders; Integrated Security=True; User ID=saik")
        conn.Open()

        Dim strsql As String

        strsql = "select CansName, NDC from Product_Data where CansName = 'Canister 4';"

        'Dim cmd As SqlCommand

        Dim cmd As New SqlCommand(strsql, conn)

        Dim myReader As SqlDataReader
        myReader = cmd.ExecuteReader
        myReader.Read()

        TextBox3.Text = myReader("CansName")

        TextBox4.Text = myReader("NDC")

        conn.Close()



    End Sub

    Private Sub TextBox3_TextChanged(sender As Object, e As EventArgs) Handles TextBox3.TextChanged

    End Sub

    Private Sub TextBox4_TextChanged(sender As Object, e As EventArgs) Handles TextBox4.TextChanged

    End Sub

    'SmartPod Data Grid View
    'Make is synchro
    Private Sub DataGridView5_CellContentClick(sender As Object, e As DataGridViewCellEventArgs)

    End Sub


    Private Sub datagridShow()

        Dim conn As New SqlConnection

        conn.ConnectionString = ("Data Source=.;Initial Catalog=transactional_orders; Integrated Security=True; User ID=saik")
        conn.Open()

        Dim cmd As New SqlCommand("select * from TestData", conn)

        Dim ds As New DataSet
        Dim dt As New DataTable
        ds.Tables.Add(dt)

        Dim da As New SqlDataAdapter
        da = New SqlDataAdapter("select * from TestData", conn)
        'da.Fill(dt)

        'da.SelectCommand = cmd

        'dt.Clear()
        'da.Fill(dt)
        'DataGridView5.DataSource = dt.DefaultView
        conn.Close()

        'DataGridView5.Rows.Add()

    End Sub


    'Method1 for copying table to BU FlexSim Database

    Private Sub CopyTable()

        'String ConfigConnectionString = "Server= DESKTOP-EKJ1P64\\SQL2019; Database= Work;Integrated Security = SSPI; ";
        '    String sql = "select TableName from Config_Table where Active=1 order by TableName";

        '    // Create source connection
        '    SqlConnection connection = New SqlConnection(ConfigConnectionString);
        '    SqlDataReader dataReader;

        'Try
        '    connection.Open()
        '    SqlCommand cmd = New SqlCommand(Sql, connection)
        '        dataReader = cmd.ExecuteReader()
        '    While (dataReader.Read())
        '        {
        '         String Tbl = dataReader.GetValue(0).ToString();

        '           //Move sql table
        '           CopySQLTable(Tbl, True)
        '        }

        '        dataReader.Close()
        '        cmd.Dispose()
        '        connection.Close()

        '    Catch (Exception ex)
        '    {
        '        connection.Close()
        '    }

        Dim conn1 As New SqlConnection

        conn1.ConnectionString = ("data source=tcp:wise-2xswbm2-d,1433;initial catalog=nexia; integrated security=false; user id=saik; password=1234")
        Dim sqlcopy = "select * from nexiat.dbo.current_orders;"



        Try
            conn1.Open()
            command = New SqlCommand(sqlcopy, conn1)
            command.ExecuteNonQuery()
            'dataReader = command.ExecuteReader
            Using dataReader = command.ExecuteReader()
                While dataReader.Read
                    Dim Tbl As String
                    Tbl = dataReader.GetValue(0).ToString
                    ReplaceSqlTable(Tbl, True)

                End While


            End Using

            command.Dispose()
            conn1.Close()
        Catch ex As Exception
            'MsgBox(ex.ToString)
        End Try



    End Sub



    Private Sub ReplaceSqlTable(TableName As String, OverwriteDestinationTable As Boolean)

        Dim SourceconnectionString As String
        Dim DestconnectionString As String
        Dim command1 As SqlCommand
        Dim source As New SqlConnection
        Dim destination As New SqlConnection

        'Dim command2 As SqlCommand
        'Dim bulkData As SqlBulkCopy

        SourceconnectionString = "data source=tcp:wise-2xswbm2-d,1433;initial catalog=nexia; integrated security=false; user id=saik; password=1234"
        DestconnectionString = "Data Source=.;Initial Catalog=testdb; Integrated Security=True; User ID=chethan"

        source.ConnectionString = SourceconnectionString

        destination.ConnectionString = DestconnectionString

        Dim selectData = "Select * from NEXiAT.dbo.Current_Orders"
        source.Open()
        destination.Open()


        'command2 = New SqlCommand("Truncate Table" + TableName + "", destination)


        command1 = New SqlCommand(selectData, source)

        Using dataReader1 = command1.ExecuteReader()

            Using sqlBulkCopy As New SqlBulkCopy(DestconnectionString)
                sqlBulkCopy.DestinationTableName = "testdb.dbo.Current_Orders"
                sqlBulkCopy.WriteToServer(dataReader1)

                'bulkData.DestinationTableName = "testdb.dbo.Current_Orders"

            End Using
        End Using

        'SqlBulkCopy.Close()
        destination.Close()
        source.Close()


    End Sub




    Private Sub Button17_Click(sender As Object, e As EventArgs) Handles Button17.Click

        CopyTable()

    End Sub

    Private Sub Button16_Click(sender As Object, e As EventArgs) Handles Button16.Click


        Dim conn1 As New SqlConnection

        conn1.ConnectionString = ("data source=tcp:wise-2xswbm2-d,1433;initial catalog=nexia; integrated security=false; user id=saik; password=1234")
        Dim sqlcopy = "select * into nexiat.dbo.current_orders from nexia.dbo.current_orders;"
        'conn1.Open()

        'Dim cmd As New SqlCommand("select * into nexiat.dbo.current_orders from nexia.dbo.current_orders;", conn1)

        'conn1.Close()

        Try
            conn1.Open()
            command = New SqlCommand(sqlcopy, conn1)
            command.ExecuteNonQuery()
            Dim dt As New DataTable()
            Dim da As New SqlDataAdapter(command)

            da.Fill(dt)
            DataGridView1.DataSource = dt
            command.Dispose()
            conn1.Close()
        Catch ex As Exception
            'MsgBox(ex.ToString)
        End Try



        'Dim constring1 As String = "Data Source=tcp:WISE-2XSWBM2-D,1433;Initial Catalog=NEXiA; Integrated Security=False; User ID=saik"
        'Using con1 As New SqlConnection(constring1)
        'Using cmd As New SqlCommand("select * into NEXiAT.dbo.Current_orders from NEXiA.dbo.Current_Orders;", con1)
        'cmd.CommandType = CommandType.Text
        'End Using
        'End Using

    End Sub

    Private Sub TextBox5_TextChanged(sender As Object, e As EventArgs)

    End Sub

    Private Sub Label17_Click(sender As Object, e As EventArgs) Handles Label17.Click

    End Sub

    Private Sub Button18_Click(sender As Object, e As EventArgs) Handles Button18.Click

    End Sub

    Private Sub RemoveDataIniA(sender As Object, e As EventArgs) Handles Button19.Click

        Dim conn1 As New SqlConnection

        conn1.ConnectionString = ("data source=tcp:wise-2xswbm2-d,1433;initial catalog=nexia; integrated security=false; user id=saik; password=1234")
        Dim sqltruncate = "drop table NEXiAT.dbo.Current_orders;"

        Try
            conn1.Open()
            command = New SqlCommand(sqltruncate, conn1)
            command.ExecuteNonQuery()
            Dim dt As New DataTable()
            Dim da As New SqlDataAdapter(command)

            da.Fill(dt)
            DataGridView1.DataSource = dt
            command.Dispose()
            conn1.Close()
        Catch ex As Exception
            'MsgBox(ex.ToString)
        End Try



    End Sub

    Private Sub RemoveDataInFlexSimDB(sender As Object, e As EventArgs) Handles Button20.Click

        Dim conn1 As New SqlConnection

        conn1.ConnectionString = ("Data Source=.;Initial Catalog=transactional_orders; Integrated Security=True; User ID=saik")
        Dim sqltruncate = "truncate table testdb.dbo.current_orders"

        Try
            conn1.Open()
            command = New SqlCommand(sqltruncate, conn1)
            command.ExecuteNonQuery()
            Dim dt As New DataTable()
            Dim da As New SqlDataAdapter(command)

            da.Fill(dt)
            DataGridView1.DataSource = dt
            command.Dispose()
            conn1.Close()
        Catch ex As Exception
            'MsgBox(ex.ToString)
        End Try


    End Sub

    Private Sub DataGridView5_CellContentClick_1(sender As Object, e As DataGridViewCellEventArgs) Handles DataGridView5.CellContentClick

    End Sub

    Private Sub DataForSmartPodStation(sender As Object, e As EventArgs) Handles SmartPodTabDataTimer.Tick
        Try
            Dim query As String = "select * from EvtEvent"
            Using Con As SqlConnection = New SqlConnection("Data Source=localhost;Initial Catalog=transactional_orders;Integrated Security=True")
                Using cmd As SqlCommand = New SqlCommand(query, Con)
                    Using da As New SqlDataAdapter()
                        da.SelectCommand = cmd
                        Using dt As New DataTable()
                            da.Fill(dt)
                            Me.DataGridView5.DataSource = dt
                        End Using
                    End Using
                End Using
            End Using
        Catch ex As Exception

        End Try
    End Sub

    Private Sub DataGridView7_CellContentClick(sender As Object, e As DataGridViewCellEventArgs) Handles DataGridView7.CellContentClick

    End Sub

    Private Sub DataForSmartCollatorStation(sender As Object, e As EventArgs) Handles SmartPodTabDataTimer.Tick, SmartCollatorStationTimer.Tick
        Try
            Dim query As String = "select CG.GroupId,CG.NumOfObjects,CGO.AssocDtTm,CGO.CollateDtTm from CollateGroup CG join CollateGroupObjects CGO on CG.GroupId=CGO.GroupId;"
            Using Con As SqlConnection = New SqlConnection("Data Source=localhost;Initial Catalog=transactional_orders;Integrated Security=True")
                Using cmd As SqlCommand = New SqlCommand(query, Con)
                    Using da As New SqlDataAdapter()
                        da.SelectCommand = cmd
                        Using dt As New DataTable()
                            da.Fill(dt)
                            Me.DataGridView7.DataSource = dt
                        End Using
                    End Using
                End Using
            End Using
        Catch ex As Exception

        End Try
    End Sub
End Class
